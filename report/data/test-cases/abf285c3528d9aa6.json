{
  "uid" : "abf285c3528d9aa6",
  "name" : "【保存】开关打开时，且当端口号和IP地址格式都正确，点击“保存”后有toast提示【NOC-7391】",
  "fullName" : "testcase.test_remote_management.Test_remote_management#test_1_add_web_wan_access",
  "historyId" : "abd8791486f5c276b81fddb7a6b876d7",
  "time" : {
    "start" : 1699174583956,
    "stop" : 1699174583956,
    "duration" : 0
  },
  "description" : "【保存】开关打开时，且当端口号和IP地址格式都正确，点击“保存”后有toast提示【NOC-7391】",
  "descriptionHtml" : "<p>【保存】开关打开时，且当端口号和IP地址格式都正确，点击“保存”后有toast提示【NOC-7391】</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "@pytest.fixture(scope='session',autouse=True)\n    def driver():\n        get_log().info('开始执行用例')\n        driver = webdriver.Chrome(executable_path=r'C:\\driver\\chromedriver.exe')\n        driver.get(conf.url)\n        driver.maximize_window()\n        driver.implicitly_wait(10)\n        # 用户登录\n        login_successfully(driver,root_username,root_password)\n        time.sleep(3)\n        # 进入设备列表\n        js = 'document.getElementsByClassName(\"el-menu-item\")[2].click()'\n        driver.execute_script(js)\n        time.sleep(1)\n        driver.get_screenshot_as_file(r'C:\\Project\\noc_ui_auto\\screenshot\\{}.png'.format(datetime.now().strftime('%Y-%m-%d')))\n        get_log().info('截图成功')\n        time.sleep(3)\n        # 选择指定设备\n>       search_sn_and_click(driver, conf.except_sn, \"online\", 3)\n\ntestcase\\conftest.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\user_public_fun.py:22: in search_sn_and_click\n    EC.element_to_be_clickable((By.XPATH, UserPublicLocators.sn_input))).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"134986fb71990931a3613fd79f9d9d8e\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x000001D6B5153048>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\Administrator\\AppData\\Roaming\\Python\\Python36\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1699174583957,
      "stop" : 1699174616069,
      "duration" : 32112
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
    "statusTrace" : "  File \"C:\\Users\\Administrator\\AppData\\Roaming\\Python\\Python36\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\Administrator\\AppData\\Roaming\\Python\\Python36\\site-packages\\_pytest\\fixtures.py\", line 1122, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"C:\\Users\\Administrator\\AppData\\Roaming\\Python\\Python36\\site-packages\\_pytest\\fixtures.py\", line 917, in call_fixture_func\n    fixture_result = next(generator)\n  File \"C:\\Project\\noc_ui_auto\\testcase\\conftest.py\", line 47, in driver\n    search_sn_and_click(driver, conf.except_sn, \"online\", 3)\n  File \"C:\\Project\\noc_ui_auto\\common\\user_public_fun.py\", line 22, in search_sn_and_click\n    EC.element_to_be_clickable((By.XPATH, UserPublicLocators.sn_input))).click()\n  File \"C:\\Users\\Administrator\\AppData\\Roaming\\Python\\Python36\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  }, {
    "name" : "delet_log",
    "time" : {
      "start" : 1699174583957,
      "stop" : 1699174583957,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "【保存】开关打开时，且当端口号和IP地址格式都正确，点击“保存”后有toast提示【NOC-7391】",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "@pytest.fixture(scope='session',autouse=True)\n    def driver():\n        get_log().info('开始执行用例')\n        driver = webdriver.Chrome(executable_path=r'C:\\driver\\chromedriver.exe')\n        driver.get(conf.url)\n        driver.maximize_window()\n        driver.implicitly_wait(10)\n        # 用户登录\n        login_successfully(driver,root_username,root_password)\n        time.sleep(3)\n        # 进入设备列表\n        js = 'document.getElementsByClassName(\"el-menu-item\")[2].click()'\n        driver.execute_script(js)\n        time.sleep(1)\n        driver.get_screenshot_as_file(r'C:\\Project\\noc_ui_auto\\screenshot\\{}.png'.format(datetime.now().strftime('%Y-%m-%d')))\n        get_log().info('截图成功')\n        time.sleep(3)\n        # 选择指定设备\n>       search_sn_and_click(driver, conf.except_sn, \"online\", 3)\n\ntestcase\\conftest.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\user_public_fun.py:22: in search_sn_and_click\n    EC.element_to_be_clickable((By.XPATH, UserPublicLocators.sn_input))).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"134986fb71990931a3613fd79f9d9d8e\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x000001D6B5153048>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\Administrator\\AppData\\Roaming\\Python\\Python36\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4f1ed56fc1fbe74e",
      "name" : "log",
      "source" : "4f1ed56fc1fbe74e.txt",
      "type" : "text/plain",
      "size" : 131
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "远程管理模块"
  }, {
    "name" : "tag",
    "value" : "remote_management"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_remote_management"
  }, {
    "name" : "subSuite",
    "value" : "Test_remote_management"
  }, {
    "name" : "host",
    "value" : "ycccccc"
  }, {
    "name" : "thread",
    "value" : "9544-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_remote_management"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "remote_management" ]
  },
  "source" : "abf285c3528d9aa6.json",
  "parameterValues" : [ ]
}